#pragma checksum "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "135a498a5b8a254c5884612750fdcc7d5508d7c646c9b7a2cf9509a1c474c5f3"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_CrearPDF_Index), @"mvc.1.0.view", @"/Views/CrearPDF/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\_ViewImports.cshtml"
using BioLab_Diagnostics;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\_ViewImports.cshtml"
using BioLab_Diagnostics.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
using System.Text.RegularExpressions;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"135a498a5b8a254c5884612750fdcc7d5508d7c646c9b7a2cf9509a1c474c5f3", @"/Views/CrearPDF/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA256", @"cb393e5efb3d1fb165c8b6e9411c6c608773264057cf8e7c7862d1a519770895", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_CrearPDF_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<BioLab_Diagnostics.Models.PeticionesPruebas>>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/Logo-favicon-c.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("Laboratorio Clinico BioLab Diagnostics"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("max-width: 200px;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
  
    Layout = null;

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html lang=\"es\">\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "135a498a5b8a254c5884612750fdcc7d5508d7c646c9b7a2cf9509a1c474c5f35366", async() => {
                WriteLiteral(@"
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Informe de Resultados - Laboratorio Clínico</title>
    <style>

        .container {
            width: 100%;
            padding: 10px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            padding-top: 5px;
            padding-bottom: 5px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        h2 {
            text-align: center;
            background-color: lightgray;
        }

    </style>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "135a498a5b8a254c5884612750fdcc7d5508d7c646c9b7a2cf9509a1c474c5f37016", async() => {
                WriteLiteral("\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 text-center mw-100\">\r\n                <div style=\"display: inline-block;\">\r\n                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "135a498a5b8a254c5884612750fdcc7d5508d7c646c9b7a2cf9509a1c474c5f37500", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                </div>
                <div style=""display: inline-block; vertical-align: top; margin-left: 20px;"">
                    <p>
                        <h1>Laboratorio Clínico BioLab Diagnostics</h1>
                    </p>
                    Dirección: Av. del Botánico 85, Madrid<br />
                    Teléfono: (+34) 683-786-962<br />
                </div>
            </div>
        </div>
        <div class=""row mt-4"">
            <div class=""col-md-12"">
                <h2>Informe de Resultados</h2>
                <table>
                    <thead>
                        <tr>
                            <th>Prueba</th>
                            <th>Resultado</th>
                            <th>Valor de Referencia</th>
                            <th>Unidades</th>
                        </tr>
                    </thead>
                    <tbody>
");
#nullable restore
#line 68 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                         foreach (var item in Model)
                        {

#line default
#line hidden
#nullable disable
                WriteLiteral("                            <tr>\r\n                                <td>\r\n                                    ");
#nullable restore
#line 72 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                               Write(Html.DisplayFor(modelItem => item.IdPruebaNavigation.Nombre));

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                                </td>\r\n                                <td>\r\n");
#nullable restore
#line 75 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                      
                                        var valorReferencia = "";
                                        foreach (var i in item.IdPruebaNavigation.ValoresReferencia)
                                        {
                                            //Si no depende del sexo, guardo el valor de referencia para mostrarlo
                                            if (i.Sexo == null)
                                            {
                                                valorReferencia = i.ValorReferencia;
                                            }
                                            else
                                            {
                                                //Si depende del sexo, guardo el valor de referencia correspondiente al sexo del paciente
                                                if (i.Sexo.Equals(item.IdPeticionNavigation.DniClienteNavigation.Sexo))
                                                {
                                                    valorReferencia = i.ValorReferencia;
                                                }
                                            }
                                        }
                                        if (valorReferencia.Contains("-"))
                                        {
                                            var intervalo = valorReferencia.Split("-");
                                            //Valor fuera del intervalo de referencia
                                            if (Convert.ToDouble(item.Resultado) < Convert.ToDouble(intervalo[0]) || Convert.ToDouble(item.Resultado) > Convert.ToDouble(intervalo[1]))
                                            {
                                                

#line default
#line hidden
#nullable disable
                WriteLiteral("<span style=\"color:red;\">");
#nullable restore
#line 99 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                          Write(item.Resultado);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>");
#nullable restore
#line 99 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                                                            
                                            }
                                            else
                                            {
                                                

#line default
#line hidden
#nullable disable
                WriteLiteral("<span style=\"color:forestgreen;\">");
#nullable restore
#line 103 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                                  Write(item.Resultado);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>");
#nullable restore
#line 103 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                                                                    
                                            }
                                        }
                                        else if (valorReferencia.Contains("<") && !valorReferencia.Contains("="))
                                        {
                                            valorReferencia = valorReferencia.Replace("<", "");
                                            if (Convert.ToDouble(item.Resultado) >= Convert.ToDouble(valorReferencia))
                                            {
                                                

#line default
#line hidden
#nullable disable
                WriteLiteral("<span style=\"color:red;\">");
#nullable restore
#line 111 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                          Write(item.Resultado);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>");
#nullable restore
#line 111 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                                                            
                                            }
                                            else
                                            {
                                                

#line default
#line hidden
#nullable disable
                WriteLiteral("<span style=\"color:forestgreen;\">");
#nullable restore
#line 115 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                                  Write(item.Resultado);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>");
#nullable restore
#line 115 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                                                                    
                                            }
                                        }
                                        else if (valorReferencia.Contains("<="))
                                        {
                                            valorReferencia = valorReferencia.Replace("<=", "");
                                            if (Convert.ToDouble(item.Resultado) > Convert.ToDouble(valorReferencia))
                                            {
                                                

#line default
#line hidden
#nullable disable
                WriteLiteral("<span style=\"color:red;\">");
#nullable restore
#line 123 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                          Write(item.Resultado);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>");
#nullable restore
#line 123 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                                                            
                                            }
                                            else
                                            {
                                                

#line default
#line hidden
#nullable disable
                WriteLiteral("<span style=\"color:forestgreen;\">");
#nullable restore
#line 127 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                                  Write(item.Resultado);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>");
#nullable restore
#line 127 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                                                                    
                                            }
                                        }
                                        else if (valorReferencia.Contains(">") && !valorReferencia.Contains("="))
                                        {
                                            valorReferencia = valorReferencia.Replace(">", "");
                                            if (Convert.ToDouble(item.Resultado) <= Convert.ToDouble(valorReferencia))
                                            {
                                                

#line default
#line hidden
#nullable disable
                WriteLiteral("<span style=\"color:red;\">");
#nullable restore
#line 135 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                          Write(item.Resultado);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>");
#nullable restore
#line 135 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                                                            
                                            }
                                            else
                                            {
                                                

#line default
#line hidden
#nullable disable
                WriteLiteral("<span style=\"color:forestgreen;\">");
#nullable restore
#line 139 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                                  Write(item.Resultado);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>");
#nullable restore
#line 139 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                                                                    
                                            }
                                        }
                                        else if (valorReferencia.Contains(">="))
                                        {
                                            valorReferencia = valorReferencia.Replace(">=", "");
                                            if (Convert.ToDouble(item.Resultado) < Convert.ToDouble(valorReferencia))
                                            {
                                                

#line default
#line hidden
#nullable disable
                WriteLiteral("<span style=\"color:red;\">");
#nullable restore
#line 147 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                          Write(item.Resultado);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>");
#nullable restore
#line 147 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                                                            
                                            }
                                            else
                                            {
                                                

#line default
#line hidden
#nullable disable
                WriteLiteral("<span style=\"color:forestgreen;\">");
#nullable restore
#line 151 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                                  Write(item.Resultado);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>");
#nullable restore
#line 151 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                                                                    
                                            }
                                        }
                                        else
                                        {
                                            //Compruebo si el valor de referencia es un string o un valor numérico
                                            if (Regex.IsMatch(valorReferencia, @"\w*") == true)
                                            {
                                                if (!item.Resultado.ToUpper().Equals(valorReferencia.ToUpper()))
                                                {
                                                    

#line default
#line hidden
#nullable disable
                WriteLiteral("<span style=\"color:red;\">");
#nullable restore
#line 161 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                              Write(item.Resultado.ToUpper());

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>");
#nullable restore
#line 161 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                                                                          
                                                }
                                                else
                                                {
                                                    

#line default
#line hidden
#nullable disable
                WriteLiteral("<span style=\"color:forestgreen;\">");
#nullable restore
#line 165 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                                      Write(item.Resultado.ToUpper());

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>");
#nullable restore
#line 165 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                                                                                  
                                                }
                                            }
                                            else
                                            {
                                                if (Convert.ToDouble(item.Resultado) != Convert.ToDouble(valorReferencia))
                                                {
                                                    

#line default
#line hidden
#nullable disable
                WriteLiteral("<span style=\"color:red;\">");
#nullable restore
#line 172 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                              Write(item.Resultado);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>");
#nullable restore
#line 172 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                                                                
                                                }
                                                else
                                                {
                                                    

#line default
#line hidden
#nullable disable
                WriteLiteral("<span style=\"color:forestgreen;\">");
#nullable restore
#line 176 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                                      Write(item.Resultado);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>");
#nullable restore
#line 176 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                                                                        
                                                }
                                            }
                                        }
                                    

#line default
#line hidden
#nullable disable
                WriteLiteral("                                </td>\r\n                                <td>\r\n");
#nullable restore
#line 183 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                      
                                        foreach (var i in item.IdPruebaNavigation.ValoresReferencia)
                                        {
                                            if (i.Sexo == null)
                                            {
                                                

#line default
#line hidden
#nullable disable
#nullable restore
#line 188 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                 Write(i.ValorReferencia);

#line default
#line hidden
#nullable disable
#nullable restore
#line 188 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                               
                                            }
                                            else
                                            {
                                                if (i.Sexo.Equals(item.IdPeticionNavigation.DniClienteNavigation.Sexo))
                                                {
                                                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 194 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                     Write(i.ValorReferencia);

#line default
#line hidden
#nullable disable
#nullable restore
#line 194 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                                                                                   
                                                }
                                            }
                                        }
                                    

#line default
#line hidden
#nullable disable
                WriteLiteral("                                </td>\r\n                                <td>\r\n                                    ");
#nullable restore
#line 201 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                               Write(Html.DisplayFor(modelItem => item.IdPruebaNavigation.Unidades));

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                                </td>\r\n                            </tr>\r\n");
#nullable restore
#line 204 "C:\Users\crist\OneDrive\Escritorio\Proyectos ASP.NET Core\BioLab_Diagnostics\BioLab_Diagnostics\Views\CrearPDF\Index.cshtml"
                        }

#line default
#line hidden
#nullable disable
                WriteLiteral("                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<BioLab_Diagnostics.Models.PeticionesPruebas>> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
